name: PR Test

on: pull_request

jobs:
  pr_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo '::set-output name=dir::$(yarn config get cacheFolder)'

      - name: Cache Yarn cache files
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-Node-v${{ matrix.node-version }}-Yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-Node-v${{ matrix.node-version }}-Yarn-

      - name: Install dependencies
        run: yarn install

      - name: format
        run: yarn run format

      - name: If fail
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{github.token}}
          script: |
            const ref = "${{github.ref}}"
            const pull_number = Number(ref.split("/")[2])
            await github.pulls.createReview({
              ...context.repo,
              pull_number,
              body:"An error has occurred. Please check your code and try again.",
              event: "REQUEST_CHANGES"
            })
            await github.pulls.update({
              ...context.repo,
              pull_number,
              state: "closed"
            })
        if: failure()
